# To learn more about .editorconfig see https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference

root = true  #Remove the line if you want to inherit .editorconfig settings from higher directories

# All files
[*]
#### Core EditorConfig Options ####
# Indentation and spacing
indent_size = 2  #Recommended by default, but it can be overwritten by rules below (depending on file extension).
indent_style = space  #Spaces instead of tabs, as different code readors (e.g., online git code comparers) interprent tabs with different indent.

# New line preferences
end_of_line = crlf
insert_final_newline = true:error  #Git doesn't like, when file is not ended with space.
trim_trailing_whitespace = true:error  #Trailing whitespaces complicate work with code in text editor and git.

# Xml files
[*.{xml,xaml,config,aspx,cshtml,html}]
indent_size = 2  #Recommended as industry standard. Xml files have deep nesting, so small indent is important.

# C# files
[*.cs]
indent_size = 4  #Recommended as industry standard. Allowed to be replaced to 2. Not so important, as modern C# code-style recommends to break long lines.

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false #Reasons to seaparate the directives not found. If someone finds it useful, then the arguments are welcome.
dotnet_sort_system_directives_first = false     #It's easier for human brain to search in list sorted from A to Z instead of searching in two lists.
file_header_template = unset                    #Blank.

# this. and Me. preferences
dotnet_style_qualification_for_event = false:error
dotnet_style_qualification_for_field = false:error
dotnet_style_qualification_for_method = false:silent  #Sometimes, it's more readable when methods are called through this (e.g., this.GetType()).
dotnet_style_qualification_for_property = false:error

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:error  #Prefer int local; It's more readable, though can add some inconvinience over refactoring.
dotnet_style_predefined_type_for_member_access = false:error             #Prefer String.IsNullOrEmpty("s"); MSDN style. It displays that we work with class rather than primitive type.

# Expression-level preferences
dotnet_style_namespace_match_folder = true:error  #Industry standard.

#(5) Order modifiers (IDE0036)
dotnet_diagnostic.IDE0036.severity = error

#(5) Add accessibility modifiers (IDE0040)
dotnet_style_require_accessibility_modifiers = always:error
dotnet_diagnostic.IDE0040.severity = error

#(5) Add readonly modifier (IDE0044)
dotnet_style_readonly_field = true:error
dotnet_diagnostic.IDE0044.severity = error

#(5) Make local function static (IDE0062)
csharp_prefer_static_local_function = true:error
dotnet_diagnostic.IDE0062.severity = error

# Parentheses preferences (IDE0047 and IDE0048)

# (7) IDE0047 Remove unnecessary parentheses
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:silent

# (7) IDE0048 Add parentheses for clarity
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:error

# (7) IDE0047 Remove unnecessary parentheses
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary:silent

# (7) IDE0047 Remove unnecessary parentheses
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:error

dotnet_diagnostic.IDE0047.severity = silent
dotnet_diagnostic.IDE0048.severity = error

# (7) Use object initializers (IDE0017)
dotnet_style_object_initializer = true:error
dotnet_diagnostic.IDE0017.severity = error

# (7) Inline variable declaration (IDE0018)
csharp_style_inlined_variable_declaration = true:error
dotnet_diagnostic.IDE0018.severity = error

# (7) Use collection initializers (IDE0028)
dotnet_style_collection_initializer = true:silent
dotnet_diagnostic.IDE0028.severity = silent
